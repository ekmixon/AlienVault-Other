#!/usr/share/python/alienvault-api-core/bin/python
# -*- coding: utf-8 -*-
# 5.2 alarm sync.  Basically a copy of the stock function with stdout instead....


from db.methods.system import get_system_id_from_local, get_children_servers
from db.methods.server import get_server_id_from_local
from db.methods.data   import get_local_alarms
from apimethods.system.system import get_child_alarms, resend_alarms


print("Forward consistence check")
(success, local_id) = get_server_id_from_local()
if not success:
    print("Can't retrieve system_id.")
    exit

success, server_list = get_children_servers(local_id)
if not server_list:
    print ("No Child Servers Found")
    exit
if not success:
    print("Can't retrieve children system list.")
    exit
# Get the current alarms
# Check 8 hours back
success, local_alarms = get_local_alarms(delay=1, delta=3)

# local_alarms => hash, key => event_id data => server_id
if not success:
    print("Can't retrieve local alarms")
    exit
for server in server_list:
    print(f"Getting Alarms from Child: {str(server)}")
    success, child_alarms = get_child_alarms(server, delay=1, delta=3)

    if not success:
        print("Can't retrieve remote alarms for server '%s'. Skipping" % str(server))
        continue
    if missing_alarms := [
        event_id for event_id in child_alarms if event_id not in local_alarms
    ]:
        print("Found Missing Alarms...Resending..")
        success, message = resend_alarms(server, missing_alarms)
        if not success:
            print("Can't resend remote alarams from server '%s': %s. Skipping" % (message, str(server)))
        else:
            print("Alarms Sent")
