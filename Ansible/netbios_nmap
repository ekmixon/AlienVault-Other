#!/usr/bin/python

#Ansible module to take perform netbios resolution through NMAP
#
# This runs an nmap scan, with script, grabs netbios names.  Returns the output for use in other things
# Put this file in: /usr/share/alienvault/api_core/share/ansible/netbios_nmap
# Also make sure the network your searching is defined for the sensor, otherwise the server will reject the idm events
#
# Usage and Examples
# ansible [sensor] -s -m netbios_nmap -a "target=[net_range]"
# ansible 10.67.1.210 -s -m netbios_nmap -a "target=192.168.100.0/24"
# ansible 10.67.1.210 -s -m netbios_nmap -a "target=192.168.100.0/24"; tail -50 /var/log/alienvault/server/server.log
#10.67.1.210 | success >> {
#"changed": true,
#"hosts_found": {
#"192.168.100.195": "machine1",
#"192.168.100.200": "machine2",
#"192.168.100.251": "machine3",
#"192.168.100.75": "machine4",
#"192.168.100.76": "machine5"
#},
#"msg": "Adding Hosts...\n"
#}


#Import Stuff
import sys 
import os
import xml.dom.minidom
import re
import time
import json
from commands import getstatusoutput
sys.path.insert(0,os.path.abspath("/usr/lib/python2.6/dist-packages"))
import nmap


def run_scan(target):
	nm = nmap.PortScanner()
	try:
		nm.scan(hosts=target, arguments='-v0 -d0 -n -sU -p137 --script=nbstat.nse')
	except:
		print "Stderr"
	#print nm.command_line()
	return nm

	
def main():
	"""Main function"""
	module = AnsibleModule(
		argument_spec=dict(
		    target=dict(default=None, required=True)
		),
	)
	target = module.params.get('target')
	nm = run_scan(target)
	hosts = {}
	#print vars(nm)
	#print nm.get_nmap_last_output()
	#Parse XML
	dom = xml.dom.minidom.parseString(nm.get_nmap_last_output())
	# get script output if any
	for dhost in dom.getElementsByTagName('host'):
		host = dhost.getElementsByTagName('address')[0].getAttributeNode('addr').value
		for dscript in dhost.getElementsByTagName('script'):
			script_id = dscript.getAttributeNode('id').value
			script_out = dscript.getAttributeNode('output').value
			if len(script_out):
				if m := re.search('NetBIOS\sname:\s(?P<nb_name>\S+),', script_out):
					#output += "Host: " + host + ' NetBIOS Name: ' + m.group('nb_name').title() + "\n"
					hosts[host] = m['nb_name'].title()
	output = '' + ('Hosts Found.' if len(hosts) else 'No Hosts Found.')
	module.exit_json(changed=True, msg=output, hosts_found = hosts)
# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()
